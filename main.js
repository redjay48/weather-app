/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (() => {

eval("const searchBar = document.querySelector(\"#search-bar\");\nconst searchBtn = document.getElementById(\"search-btn\");\nconst celsius = document.querySelector(\".celsius\");\nconst fahrenheit = document.querySelector(\".fahrenheit\");\nconst tempBtns = document.getElementsByClassName(\"temp-btn\");\nconst tempMain = document.querySelector(\".temp\");\nconst tempMax = document.querySelector(\".max\");\nconst tempMin = document.querySelector(\".min\");\nconst city = document.querySelector('.city');\nconst country = document.querySelector('.country');\nconst lat = document.querySelector('.lat');\nconst lon = document.querySelector('.lon');\nconst day = document.querySelector('.day');\nconst date = document.querySelector('.date');\nconst timeZone = document.querySelector('.timezone');\nconst weatherIcon = document.querySelector('#weather-icon');\nconst weatherType = document.querySelector('.weather-type');\nconst weatherDescr = document.querySelector('.descr');\nconst humid = document.querySelector('.humid');\nconst cloud = document.querySelector('.cloud');\nconst feelsLike = document.querySelector('.feels-like');\nconst windSpeed = document.querySelector('.wind-speed');\n\nlet cActive = false;\nlet fActive = false;\n\n\nasync function getInfo() {\n  const response = await fetch(\n    `http://api.openweathermap.org/data/2.5/weather?q=${searchBar.value}&APPID=95e569ea6908c8defcf7629bc3f9281d`,\n    { mode: \"cors\" }\n  );\n  const weatherData = await response.json();\n  console.log(weatherData);\n    populate(weatherData);\n    tempFun(weatherData);\n    for (const btn of tempBtns) {\n      btn.addEventListener(\"click\", (e) => {\n        tempActive(e);\n        tempChange(e, weatherData);\n        btnDisable(e);\n      });\n    }\n}\n\nfunction populate(data) {\n  city.textContent = data.name;\n  country.textContent = countryName(data);\n  lat.textContent = `lat: ${data.coord.lat}`;\n  lon.textContent = `lon: ${data.coord.lon}`;\n  timeZone.textContent = `Timezone: ${(data.timezone)/3600}`;\n  weatherIcon.src = `https://openweathermap.org/img/wn/${data.weather[0].icon}@4x.png`;\n  weatherType.textContent = data.weather[0].main;\n  weatherDescr.textContent = data.weather[0].description;\n  humid.textContent = \"Humidity: \" + data.main.humidity + \"%\";\n  cloud.textContent = \"Cloudiness: \" + data.clouds.all + \"%\";\n  windSpeed.textContent = \"Wind Speed: \" + data.wind.speed + \"m/s\";\n  day.textContent = getDay();\n}\n\nfunction tempFun(data) {\n  tempMain.textContent = (Number(data.main.temp) - 273.15).toString().match(/^-?\\d+(?:\\.\\d{0,2})?/)[0] + \"°\";\n    tempMax.textContent = (Number(data.main.temp_max) - 273.15).toString().match(/^-?\\d+(?:\\.\\d{0,2})?/)[0] + \"°C\";\n    tempMin.textContent = (Number(data.main.temp_min) - 273.15).toString().match(/^-?\\d+(?:\\.\\d{0,2})?/)[0] + \"°C\";\n    feelsLike.textContent = \"Feels Like: \" + (Number(data.main.feels_like) - 273.15).toString().match(/^-?\\d+(?:\\.\\d{0,2})?/)[0] + \"°C\" ;\n    celsius.disabled = true;\n}\n\nfunction getDay() {\n  const date = new Date();\n  const days = ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'];\n  return days[date.getDay()];\n}\n\nfunction countryName(data) {\n  const countryList = {\n    AF: \"Afghanistan\",\n    AL: \"Albania\",\n    DZ: \"Algeria\",\n    AS: \"American Samoa\",\n    AD: \"Andorra\",\n    AO: \"Angola\",\n    AI: \"Anguilla\",\n    AQ: \"Antarctica\",\n    AG: \"Antigua and Barbuda\",\n    AR: \"Argentina\",\n    AM: \"Armenia\",\n    AW: \"Aruba\",\n    AU: \"Australia\",\n    AT: \"Austria\",\n    AZ: \"Azerbaijan\",\n    BS: \"Bahamas\",\n    BH: \"Bahrain\",\n    BD: \"Bangladesh\",\n    BB: \"Barbados\",\n    BY: \"Belarus\",\n    BE: \"Belgium\",\n    BZ: \"Belize\",\n    BJ: \"Benin\",\n    BM: \"Bermuda\",\n    BT: \"Bhutan\",\n    BO: \"Bolivia (Plurinational State of)\",\n    BQ: \"Bonaire, Sint Eustatius and Saba\",\n    BA: \"Bosnia and Herzegovina\",\n    BW: \"Botswana\",\n    BV: \"Bouvet Island\",\n    BR: \"Brazil\",\n    IO: \"British Indian Ocean Territory\",\n    BN: \"Brunei Darussalam\",\n    BG: \"Bulgaria\",\n    BF: \"Burkina Faso\",\n    BI: \"Burundi\",\n    CV: \"Cabo Verde\",\n    KH: \"Cambodia\",\n    CM: \"Cameroon\",\n    CA: \"Canada\",\n    KY: \"Cayman Islands\",\n    CF: \"Central African Republic\",\n    TD: \"Chad\",\n    CL: \"Chile\",\n    CN: \"China\",\n    CX: \"Christmas Island\",\n    CC: \"Cocos (Keeling) Islands\",\n    CO: \"Colombia\",\n    KM: \"Comoros\",\n    CD: \"Congo (the Democratic Republic of the)\",\n    CG: \"Congo\",\n    CK: \"Cook Islands\",\n    CR: \"Costa Rica\",\n    HR: \"Croatia\",\n    CU: \"Cuba\",\n    CW: \"Curaçao\",\n    CY: \"Cyprus\",\n    CZ: \"Czechia\",\n    CI: \"Côte d'Ivoire\",\n    DK: \"Denmark\",\n    DJ: \"Djibouti\",\n    DM: \"Dominica\",\n    DO: \"Dominican Republic\",\n    EC: \"Ecuador\",\n    EG: \"Egypt\",\n    SV: \"El Salvador\",\n    GQ: \"Equatorial Guinea\",\n    ER: \"Eritrea\",\n    EE: \"Estonia\",\n    SZ: \"Eswatini\",\n    ET: \"Ethiopia\",\n    FK: \"Falkland Islands [Malvinas]\",\n    FO: \"Faroe Islands\",\n    FJ: \"Fiji\",\n    FI: \"Finland\",\n    FR: \"France\",\n    GF: \"French Guiana\",\n    PF: \"French Polynesia\",\n    TF: \"French Southern Territories\",\n    GA: \"Gabon\",\n    GM: \"Gambia\",\n    GE: \"Georgia\",\n    DE: \"Germany\",\n    GH: \"Ghana\",\n    GI: \"Gibraltar\",\n    GR: \"Greece\",\n    GL: \"Greenland\",\n    GD: \"Grenada\",\n    GP: \"Guadeloupe\",\n    GU: \"Guam\",\n    GT: \"Guatemala\",\n    GG: \"Guernsey\",\n    GN: \"Guinea\",\n    GW: \"Guinea-Bissau\",\n    GY: \"Guyana\",\n    HT: \"Haiti\",\n    HM: \"Heard Island and McDonald Islands\",\n    VA: \"Holy See\",\n    HN: \"Honduras\",\n    HK: \"Hong Kong\",\n    HU: \"Hungary\",\n    IS: \"Iceland\",\n    IN: \"India\",\n    ID: \"Indonesia\",\n    IR: \"Iran (Islamic Republic of)\",\n    IQ: \"Iraq\",\n    IE: \"Ireland\",\n    IM: \"Isle of Man\",\n    IL: \"Israel\",\n    IT: \"Italy\",\n    JM: \"Jamaica\",\n    JP: \"Japan\",\n    JE: \"Jersey\",\n    JO: \"Jordan\",\n    KZ: \"Kazakhstan\",\n    KE: \"Kenya\",\n    KI: \"Kiribati\",\n    KP: \"Korea (the Democratic People's Republic of)\",\n    KR: \"Korea (the Republic of)\",\n    KW: \"Kuwait\",\n    KG: \"Kyrgyzstan\",\n    LA: \"Lao People's Democratic Republic\",\n    LV: \"Latvia\",\n    LB: \"Lebanon\",\n    LS: \"Lesotho\",\n    LR: \"Liberia\",\n    LY: \"Libya\",\n    LI: \"Liechtenstein\",\n    LT: \"Lithuania\",\n    LU: \"Luxembourg\",\n    MO: \"Macao\",\n    MG: \"Madagascar\",\n    MW: \"Malawi\",\n    MY: \"Malaysia\",\n    MV: \"Maldives\",\n    ML: \"Mali\",\n    MT: \"Malta\",\n    MH: \"Marshall Islands\",\n    MQ: \"Martinique\",\n    MR: \"Mauritania\",\n    MU: \"Mauritius\",\n    YT: \"Mayotte\",\n    MX: \"Mexico\",\n    FM: \"Micronesia (Federated States of)\",\n    MD: \"Moldova (the Republic of)\",\n    MC: \"Monaco\",\n    MN: \"Mongolia\",\n    ME: \"Montenegro\",\n    MS: \"Montserrat\",\n    MA: \"Morocco\",\n    MZ: \"Mozambique\",\n    MM: \"Myanmar\",\n    NA: \"Namibia\",\n    NR: \"Nauru\",\n    NP: \"Nepal\",\n    NL: \"Netherlands\",\n    NC: \"New Caledonia\",\n    NZ: \"New Zealand\",\n    NI: \"Nicaragua\",\n    NE: \"Niger\",\n    NG: \"Nigeria\",\n    NU: \"Niue\",\n    NF: \"Norfolk Island\",\n    MP: \"Northern Mariana Islands\",\n    NO: \"Norway\",\n    OM: \"Oman\",\n    PK: \"Pakistan\",\n    PW: \"Palau\",\n    PS: \"Palestine, State of\",\n    PA: \"Panama\",\n    PG: \"Papua New Guinea\",\n    PY: \"Paraguay\",\n    PE: \"Peru\",\n    PH: \"Philippines\",\n    PN: \"Pitcairn\",\n    PL: \"Poland\",\n    PT: \"Portugal\",\n    PR: \"Puerto Rico\",\n    QA: \"Qatar\",\n    MK: \"Republic of North Macedonia\",\n    RO: \"Romania\",\n    RU: \"Russian Federation\",\n    RW: \"Rwanda\",\n    RE: \"Réunion\",\n    BL: \"Saint Barthélemy\",\n    SH: \"Saint Helena, Ascension and Tristan da Cunha\",\n    KN: \"Saint Kitts and Nevis\",\n    LC: \"Saint Lucia\",\n    MF: \"Saint Martin (French part)\",\n    PM: \"Saint Pierre and Miquelon\",\n    VC: \"Saint Vincent and the Grenadines\",\n    WS: \"Samoa\",\n    SM: \"San Marino\",\n    ST: \"Sao Tome and Principe\",\n    SA: \"Saudi Arabia\",\n    SN: \"Senegal\",\n    RS: \"Serbia\",\n    SC: \"Seychelles\",\n    SL: \"Sierra Leone\",\n    SG: \"Singapore\",\n    SX: \"Sint Maarten (Dutch part)\",\n    SK: \"Slovakia\",\n    SI: \"Slovenia\",\n    SB: \"Solomon Islands\",\n    SO: \"Somalia\",\n    ZA: \"South Africa\",\n    GS: \"South Georgia and the South Sandwich Islands\",\n    SS: \"South Sudan\",\n    ES: \"Spain\",\n    LK: \"Sri Lanka\",\n    SD: \"Sudan\",\n    SR: \"Suriname\",\n    SJ: \"Svalbard and Jan Mayen\",\n    SE: \"Sweden\",\n    CH: \"Switzerland\",\n    SY: \"Syrian Arab Republic\",\n    TW: \"Taiwan\",\n    TJ: \"Tajikistan\",\n    TZ: \"Tanzania, United Republic of\",\n    TH: \"Thailand\",\n    TL: \"Timor-Leste\",\n    TG: \"Togo\",\n    TK: \"Tokelau\",\n    TO: \"Tonga\",\n    TT: \"Trinidad and Tobago\",\n    TN: \"Tunisia\",\n    TR: \"Turkey\",\n    TM: \"Turkmenistan\",\n    TC: \"Turks and Caicos Islands\",\n    TV: \"Tuvalu\",\n    UG: \"Uganda\",\n    UA: \"Ukraine\",\n    AE: \"United Arab Emirates\",\n    GB: \"United Kingdom of Great Britain and Northern Ireland\",\n    UM: \"United States Minor Outlying Islands\",\n    US: \"United States of America\",\n    UY: \"Uruguay\",\n    UZ: \"Uzbekistan\",\n    VU: \"Vanuatu\",\n    VE: \"Venezuela (Bolivarian Republic of)\",\n    VN: \"Viet Nam\",\n    VG: \"Virgin Islands (British)\",\n    VI: \"Virgin Islands (U.S.)\",\n    WF: \"Wallis and Futuna\",\n    EH: \"Western Sahara\",\n    YE: \"Yemen\",\n    ZM: \"Zambia\",\n    ZW: \"Zimbabwe\",\n    AX: \"Åland Islands\",\n  };\n  \n  for (const country in countryList) {\n    if (data.sys.country === country) {  \n      return countryList[country];\n    }\n  }\n}\n\nsearchBtn.addEventListener(\"click\", getInfo);\n\n\n\nfunction tempChange(e, data) {\n  if (Array.from(tempBtns).indexOf(e.target) === 0 && cActive === false) {\n    tempMain.textContent = (Number(data.main.temp) - 273.15).toString().match(/^-?\\d+(?:\\.\\d{0,2})?/)[0] + \"°\";\n    tempMax.textContent = (Number(data.main.temp_max) - 273.15).toString().match(/^-?\\d+(?:\\.\\d{0,2})?/)[0] + \"°C\";\n    tempMin.textContent = (Number(data.main.temp_min) - 273.15).toString().match(/^-?\\d+(?:\\.\\d{0,2})?/)[0] + \"°C\";\n    feelsLike.textContent = \"Feels Like: \" + (Number(data.main.feels_like) - 273.15).toString().match(/^-?\\d+(?:\\.\\d{0,2})?/)[0] + \"°C\" ;\n\n  } else if (Array.from(tempBtns).indexOf(e.target) === 1 && fActive === false) {\n    tempMain.textContent = ((Number(data.main.temp) - 273.15) * 9/5 + 32).toString().match(/^-?\\d+(?:\\.\\d{0,2})?/)[0] + \"°\";\n    tempMin.textContent = ((Number(data.main.temp_max) - 273.15) * 9/5 + 32).toString().match(/^-?\\d+(?:\\.\\d{0,2})?/)[0] + \"°F\";\n    tempMax.textContent = ((Number(data.main.temp_min) - 273.15) * 9/5 + 32).toString().match(/^-?\\d+(?:\\.\\d{0,2})?/)[0] + \"°F\";\n    feelsLike.textContent = \"Feels Like: \" + ((Number(data.main.feels_like) - 273.15) * 9/5 + 32).toString().match(/^-?\\d+(?:\\.\\d{0,2})?/)[0] + \"°F\";\n\n  }\n}\n\nfunction tempActive(e) {\n  e.target.classList.add(\"select\");\n  if (Array.from(tempBtns).indexOf(e.target) === 0) {\n    Array.from(tempBtns)[1].classList.remove(\"select\");\n  } else {\n    Array.from(tempBtns)[0].classList.remove(\"select\");\n  }\n}\n\nfunction btnDisable(e) {\n  if (Array.from(tempBtns).indexOf(e.target) === 0) {\n    e.target.disabled = true;\n    Array.from(tempBtns)[1].disabled = false;\n  } else {\n    Array.from(tempBtns)[0].disabled = false;\n  }\n}\n\n\n\n//# sourceURL=webpack://weather-app/./src/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.js"]();
/******/ 	
/******/ })()
;